/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface BaalgroniSummonerInterface extends utils.Interface {
  functions: {
    "summonBaalgroni(address,address,bool,uint256,uint256,uint256,uint256,address[],uint256[],bytes)": FunctionFragment;
    "template()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic: "summonBaalgroni" | "template"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "summonBaalgroni",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<boolean>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(functionFragment: "template", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "summonBaalgroni",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "template", data: BytesLike): Result;

  events: {
    "SummonBaalgroniComplete(address,address,address,bool,uint256,uint256,uint256,uint256,address[],uint256[],bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SummonBaalgroniComplete"): EventFragment;
}

export interface SummonBaalgroniCompleteEventObject {
  baalgroni: string;
  moloch: string;
  wrapper: string;
  shares: boolean;
  price: BigNumber;
  cap: BigNumber;
  tokensPerUnit: BigNumber;
  expiry: BigNumber;
  cuts: string[];
  amounts: BigNumber[];
  initializationParams: string;
}
export type SummonBaalgroniCompleteEvent = TypedEvent<
  [
    string,
    string,
    string,
    boolean,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    string[],
    BigNumber[],
    string
  ],
  SummonBaalgroniCompleteEventObject
>;

export type SummonBaalgroniCompleteEventFilter =
  TypedEventFilter<SummonBaalgroniCompleteEvent>;

export interface BaalgroniSummoner extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BaalgroniSummonerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    summonBaalgroni(
      moloch: PromiseOrValue<string>,
      wrapper: PromiseOrValue<string>,
      shares: PromiseOrValue<boolean>,
      price: PromiseOrValue<BigNumberish>,
      cap: PromiseOrValue<BigNumberish>,
      tokensPerUnit: PromiseOrValue<BigNumberish>,
      expiry: PromiseOrValue<BigNumberish>,
      cuts: PromiseOrValue<string>[],
      amounts: PromiseOrValue<BigNumberish>[],
      initializationParams: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    template(overrides?: CallOverrides): Promise<[string]>;
  };

  summonBaalgroni(
    moloch: PromiseOrValue<string>,
    wrapper: PromiseOrValue<string>,
    shares: PromiseOrValue<boolean>,
    price: PromiseOrValue<BigNumberish>,
    cap: PromiseOrValue<BigNumberish>,
    tokensPerUnit: PromiseOrValue<BigNumberish>,
    expiry: PromiseOrValue<BigNumberish>,
    cuts: PromiseOrValue<string>[],
    amounts: PromiseOrValue<BigNumberish>[],
    initializationParams: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  template(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    summonBaalgroni(
      moloch: PromiseOrValue<string>,
      wrapper: PromiseOrValue<string>,
      shares: PromiseOrValue<boolean>,
      price: PromiseOrValue<BigNumberish>,
      cap: PromiseOrValue<BigNumberish>,
      tokensPerUnit: PromiseOrValue<BigNumberish>,
      expiry: PromiseOrValue<BigNumberish>,
      cuts: PromiseOrValue<string>[],
      amounts: PromiseOrValue<BigNumberish>[],
      initializationParams: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<string>;

    template(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "SummonBaalgroniComplete(address,address,address,bool,uint256,uint256,uint256,uint256,address[],uint256[],bytes)"(
      baalgroni?: null,
      moloch?: null,
      wrapper?: null,
      shares?: null,
      price?: null,
      cap?: null,
      tokensPerUnit?: null,
      expiry?: null,
      cuts?: null,
      amounts?: null,
      initializationParams?: null
    ): SummonBaalgroniCompleteEventFilter;
    SummonBaalgroniComplete(
      baalgroni?: null,
      moloch?: null,
      wrapper?: null,
      shares?: null,
      price?: null,
      cap?: null,
      tokensPerUnit?: null,
      expiry?: null,
      cuts?: null,
      amounts?: null,
      initializationParams?: null
    ): SummonBaalgroniCompleteEventFilter;
  };

  estimateGas: {
    summonBaalgroni(
      moloch: PromiseOrValue<string>,
      wrapper: PromiseOrValue<string>,
      shares: PromiseOrValue<boolean>,
      price: PromiseOrValue<BigNumberish>,
      cap: PromiseOrValue<BigNumberish>,
      tokensPerUnit: PromiseOrValue<BigNumberish>,
      expiry: PromiseOrValue<BigNumberish>,
      cuts: PromiseOrValue<string>[],
      amounts: PromiseOrValue<BigNumberish>[],
      initializationParams: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    template(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    summonBaalgroni(
      moloch: PromiseOrValue<string>,
      wrapper: PromiseOrValue<string>,
      shares: PromiseOrValue<boolean>,
      price: PromiseOrValue<BigNumberish>,
      cap: PromiseOrValue<BigNumberish>,
      tokensPerUnit: PromiseOrValue<BigNumberish>,
      expiry: PromiseOrValue<BigNumberish>,
      cuts: PromiseOrValue<string>[],
      amounts: PromiseOrValue<BigNumberish>[],
      initializationParams: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    template(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
