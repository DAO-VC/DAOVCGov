/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OnboarderShamanSummoner } from "./OnboarderShamanSummoner";

export class OnboarderShamanSummonerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _template: string,
    overrides?: Overrides
  ): Promise<OnboarderShamanSummoner> {
    return super.deploy(
      _template,
      overrides || {}
    ) as Promise<OnboarderShamanSummoner>;
  }
  getDeployTransaction(
    _template: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_template, overrides || {});
  }
  attach(address: string): OnboarderShamanSummoner {
    return super.attach(address) as OnboarderShamanSummoner;
  }
  connect(signer: Signer): OnboarderShamanSummonerFactory {
    return super.connect(signer) as OnboarderShamanSummonerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnboarderShamanSummoner {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OnboarderShamanSummoner;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_template",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "onboarder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wrapper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerUnit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "details",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_onlyERC20",
        type: "bool",
      },
    ],
    name: "SummonOnbShamanoarderComplete",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_baal",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pricePerUnit",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_details",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_onlyERC20",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_platformFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lootPerUnit",
        type: "uint256",
      },
    ],
    name: "summonOnboarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161065638038061065683398101604081905261002f916100fe565b610038336100ae565b600180546001600160a01b0319166001600160a01b038316908117909155604080516346ae4a7160e11b81529051839291638d5c94e291600480830192600092919082900301818387803b15801561008f57600080fd5b505af11580156100a3573d6000803e3d6000fd5b50505050505061012e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011057600080fd5b81516001600160a01b038116811461012757600080fd5b9392505050565b6105198061013d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634d6643451461005c5780636f2ddd931461008b578063715018a61461009e5780638da5cb5b146100a8578063f2fde38b146100b9575b600080fd5b61006f61006a366004610377565b6100cc565b6040516001600160a01b03909116815260200160405180910390f35b60015461006f906001600160a01b031681565b6100a66101c2565b005b6000546001600160a01b031661006f565b6100a66100c7366004610353565b610201565b60015460009081906100e6906001600160a01b031661029c565b60405163cbfec99b60e01b81526001600160a01b038c811660048301528b81166024830152604482018b905287151560648301526084820187905260a482018690529192509082169063cbfec99b9060c401600060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b50505050896001600160a01b03167f4c340660e208152764af09d6946bb5dea26c889bcf32e0fe90c4db57c8d45d87828b8b8b8b8b6040516101ad9695949392919061043c565b60405180910390a29998505050505050505050565b6000546001600160a01b031633146101f55760405162461bcd60e51b81526004016101ec90610499565b60405180910390fd5b6101ff60006102ee565b565b6000546001600160a01b0316331461022b5760405162461bcd60e51b81526004016101ec90610499565b6001600160a01b0381166102905760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ec565b610299816102ee565b50565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8035801515811461034e57600080fd5b919050565b60006020828403121561036557600080fd5b8135610370816104ce565b9392505050565b60008060008060008060008060e0898b03121561039357600080fd5b883561039e816104ce565b975060208901356103ae816104ce565b965060408901359550606089013567ffffffffffffffff808211156103d257600080fd5b818b0191508b601f8301126103e657600080fd5b8135818111156103f557600080fd5b8c602082850101111561040757600080fd5b60208301975080965050505061041f60808a0161033e565b925060a0890135915060c089013590509295985092959890939650565b6001600160a01b038781168252861660208201526040810185905260a06060820181905281018390526000838560c0840137600060c0858401015260c0601f19601f86011683010190508215156080830152979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b038116811461029957600080fdfea2646970667358221220a3bb8693c8f1a9521d930e68e9c2cf6be593697476cf9e5f8ae9872df1fdb33b64736f6c63430008070033";
