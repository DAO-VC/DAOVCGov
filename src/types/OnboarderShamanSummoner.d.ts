/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface OnboarderShamanSummonerInterface extends ethers.utils.Interface {
  functions: {
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "summonOnboarder(address,address,uint256,string,bool,uint256,uint256)": FunctionFragment;
    "template()": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "summonOnboarder",
    values: [
      string,
      string,
      BigNumberish,
      string,
      boolean,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(functionFragment: "template", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "summonOnboarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "template", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipTransferred(address,address)": EventFragment;
    "SummonOnbShamanoarderComplete(address,address,address,uint256,string,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SummonOnbShamanoarderComplete"
  ): EventFragment;
}

export class OnboarderShamanSummoner extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: OnboarderShamanSummonerInterface;

  functions: {
    owner(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "owner()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

    summonOnboarder(
      _baal: string,
      _token: string,
      _pricePerUnit: BigNumberish,
      _details: string,
      _onlyERC20: boolean,
      _platformFee: BigNumberish,
      _lootPerUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "summonOnboarder(address,address,uint256,string,bool,uint256,uint256)"(
      _baal: string,
      _token: string,
      _pricePerUnit: BigNumberish,
      _details: string,
      _onlyERC20: boolean,
      _platformFee: BigNumberish,
      _lootPerUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    template(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    "template()"(overrides?: CallOverrides): Promise<{
      0: string;
    }>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>;

  "renounceOwnership()"(overrides?: Overrides): Promise<ContractTransaction>;

  summonOnboarder(
    _baal: string,
    _token: string,
    _pricePerUnit: BigNumberish,
    _details: string,
    _onlyERC20: boolean,
    _platformFee: BigNumberish,
    _lootPerUnit: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "summonOnboarder(address,address,uint256,string,bool,uint256,uint256)"(
    _baal: string,
    _token: string,
    _pricePerUnit: BigNumberish,
    _details: string,
    _onlyERC20: boolean,
    _platformFee: BigNumberish,
    _lootPerUnit: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  template(overrides?: CallOverrides): Promise<string>;

  "template()"(overrides?: CallOverrides): Promise<string>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    "renounceOwnership()"(overrides?: CallOverrides): Promise<void>;

    summonOnboarder(
      _baal: string,
      _token: string,
      _pricePerUnit: BigNumberish,
      _details: string,
      _onlyERC20: boolean,
      _platformFee: BigNumberish,
      _lootPerUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "summonOnboarder(address,address,uint256,string,bool,uint256,uint256)"(
      _baal: string,
      _token: string,
      _pricePerUnit: BigNumberish,
      _details: string,
      _onlyERC20: boolean,
      _platformFee: BigNumberish,
      _lootPerUnit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    template(overrides?: CallOverrides): Promise<string>;

    "template()"(overrides?: CallOverrides): Promise<string>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter;

    SummonOnbShamanoarderComplete(
      baal: string | null,
      onboarder: null,
      wrapper: null,
      pricePerUnit: null,
      details: null,
      _onlyERC20: null
    ): EventFilter;
  };

  estimateGas: {
    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>;

    "renounceOwnership()"(overrides?: Overrides): Promise<BigNumber>;

    summonOnboarder(
      _baal: string,
      _token: string,
      _pricePerUnit: BigNumberish,
      _details: string,
      _onlyERC20: boolean,
      _platformFee: BigNumberish,
      _lootPerUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "summonOnboarder(address,address,uint256,string,bool,uint256,uint256)"(
      _baal: string,
      _token: string,
      _pricePerUnit: BigNumberish,
      _details: string,
      _onlyERC20: boolean,
      _platformFee: BigNumberish,
      _lootPerUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    template(overrides?: CallOverrides): Promise<BigNumber>;

    "template()"(overrides?: CallOverrides): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>;

    "renounceOwnership()"(overrides?: Overrides): Promise<PopulatedTransaction>;

    summonOnboarder(
      _baal: string,
      _token: string,
      _pricePerUnit: BigNumberish,
      _details: string,
      _onlyERC20: boolean,
      _platformFee: BigNumberish,
      _lootPerUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "summonOnboarder(address,address,uint256,string,bool,uint256,uint256)"(
      _baal: string,
      _token: string,
      _pricePerUnit: BigNumberish,
      _details: string,
      _onlyERC20: boolean,
      _platformFee: BigNumberish,
      _lootPerUnit: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    template(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "template()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "transferOwnership(address)"(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
