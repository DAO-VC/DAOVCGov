/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Loot,
  LootInterface,
} from "../../../contracts/LootERC20.sol/Loot";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBaal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600881526754656d706c61746560c01b6020808301918252835180850190945260018452601560fa1b9084015281519192916200005b91600391620001af565b50805162000071906004906020840190620001af565b5050600554610100900460ff16159050808015620000965750600554600160ff909116105b80620000c65750620000b330620001a060201b620008b51760201c565b158015620000c6575060055460ff166001145b6200012e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6005805460ff19166001179055801562000152576005805461ff0019166101001790555b801562000199576005805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5062000292565b6001600160a01b03163b151590565b828054620001bd9062000255565b90600052602060002090601f016020900481019282620001e157600085556200022c565b82601f10620001fc57805160ff19168380011785556200022c565b828001600101855582156200022c579182015b828111156200022c5782518255916020019190600101906200020f565b506200023a9291506200023e565b5090565b5b808211156200023a57600081556001016200023f565b600181811c908216806200026a57607f821691505b602082108114156200028c57634e487b7160e01b600052602260045260246000fd5b50919050565b61177380620002a26000396000f3fe608060405234801561001057600080fd5b50600436106100eb5760003560e01c806370a082311161009257806370a08231146101a05780637ecebe00146101c957806395d89b41146101e95780639dc29fac146101f15780639fd5a6cf14610204578063a457c2d714610217578063a9059cbb1461022a578063dd62ed3e1461023d578063e5a2a2a51461025057600080fd5b806306fdde03146100f0578063095ea7b31461010e57806318160ddd1461013157806323b872dd14610143578063313ce56714610156578063395093511461016557806340c10f1914610178578063562d190d1461018d575b600080fd5b6100f861027b565b60405161010591906115fd565b60405180910390f35b61012161011c3660046114b1565b61030d565b6040519015158152602001610105565b6002545b604051908152602001610105565b6101216101513660046113cf565b610325565b60405160128152602001610105565b6101216101733660046114b1565b610368565b61018b6101863660046114b1565b610385565b005b61018b61019b3660046114fd565b6103c6565b6101356101ae36600461137a565b6001600160a01b031660009081526020819052604090205490565b6101356101d736600461137a565b60086020526000908152604090205481565b6100f8610512565b61018b6101ff3660046114b1565b610521565b61018b61021236600461140b565b610555565b6101216102253660046114b1565b610801565b6101216102383660046114b1565b61087c565b61013561024b36600461139c565b61088a565b600954610263906001600160a01b031681565b6040516001600160a01b039091168152602001610105565b60606006805461028a906116a0565b80601f01602080910402602001604051908101604052809291908181526020018280546102b6906116a0565b80156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b5050505050905090565b60003361031b8185856108c4565b5060019392505050565b60006103328484846109e8565b600061033e853361088a565b9050600019811461035d5761035d85336103588685611689565b6108c4565b506001949350505050565b60003361031b81858561037b838361088a565b6103589190611671565b6009546001600160a01b031633146103b85760405162461bcd60e51b81526004016103af90611652565b60405180910390fd5b6103c28282610bb0565b5050565b600554610100900460ff16158080156103e65750600554600160ff909116105b8061040757506103f5306108b5565b158015610407575060055460ff166001145b61046a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103af565b6005805460ff19166001179055801561048d576005805461ff0019166101001790555b600980546001600160a01b0319163317905582516104b2906006906020860190611238565b5081516104c6906007906020850190611238565b50801561050d576005805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60606007805461028a906116a0565b6009546001600160a01b0316331461054b5760405162461bcd60e51b81526004016103af90611652565b6103c28282610c89565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86660066040516105879190611561565b6040805191829003822060208084019490945282820152466060830152306080808401919091528151808403909101815260a0830182528051908401206001600160a01b038b81166000818152600887528481208054600181019091557f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960c088015260e0870192909252918c1661010086015261012085018b90526101408501526101608085018a90528351808603909101815261018085019093528251929094019190912061190160f01b6101a08401526101a283018290526101c2830181905290935091906101e20160405160208183030381529060405280519060200120905060006106cf86868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050610dd19050565b90506001600160a01b0381166107145760405162461bcd60e51b815260206004820152600a602482015269217369676e61746f727960b01b60448201526064016103af565b896001600160a01b0316816001600160a01b0316146107635760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016103af565b505050834211156107a05760405162461bcd60e51b8152602060048201526007602482015266195e1c1a5c995960ca1b60448201526064016103af565b6107ab8787876108c4565b856001600160a01b0316876001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925876040516107f091815260200190565b60405180910390a350505050505050565b6000338161080f828661088a565b90508381101561086f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103af565b61035d82868684036108c4565b60003361031b8185856109e8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03163b151590565b6001600160a01b0383166109265760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103af565b6001600160a01b0382166109875760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103af565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610a4c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103af565b6001600160a01b038216610aae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103af565b610ab9838383610df5565b6001600160a01b03831660009081526020819052604090205481811015610b315760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103af565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b68908490611671565b92505081905550826001600160a01b0316846001600160a01b031660008051602061171e83398151915284604051610ba291815260200190565b60405180910390a350505050565b6001600160a01b038216610c065760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103af565b610c1260008383610df5565b8060026000828254610c249190611671565b90915550506001600160a01b03821660009081526020819052604081208054839290610c51908490611671565b90915550506040518181526001600160a01b0383169060009060008051602061171e8339815191529060200160405180910390a35050565b6001600160a01b038216610ce95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103af565b610cf582600083610df5565b6001600160a01b03821660009081526020819052604090205481811015610d695760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103af565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610d98908490611689565b90915550506040518281526000906001600160a01b0385169060008051602061171e8339815191529060200160405180910390a3505050565b6000806000610de08585610ef3565b91509150610ded81610f63565b509392505050565b6001600160a01b0383161580610e2757506009546001600160a01b031633148015610e2757506001600160a01b038216155b80610eb75750600960009054906101000a90046001600160a01b03166001600160a01b0316630ac419b26040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610e7d57600080fd5b505af1158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb591906114db565b155b61050d5760405162461bcd60e51b815260206004820152600d60248201526c217472616e7366657261626c6560981b60448201526064016103af565b600080825160411415610f2a5760208301516040840151606085015160001a610f1e8782858561111c565b94509450505050610f5c565b825160401415610f545760208301516040840151610f498683836111ff565b935093505050610f5c565b506000905060025b9250929050565b6000816004811115610f7757610f776116f1565b1415610f805750565b6001816004811115610f9457610f946116f1565b1415610fdd5760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016103af565b6002816004811115610ff157610ff16116f1565b141561103f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103af565b6003816004811115611053576110536116f1565b14156110ac5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103af565b60048160048111156110c0576110c06116f1565b14156111195760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016103af565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561114957506000905060036111f6565b8460ff16601b1415801561116157508460ff16601c14155b1561117257506000905060046111f6565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111c6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111ef576000600192509250506111f6565b9150600090505b94509492505050565b6000806001600160ff1b0383168161121c60ff86901c601b611671565b905061122a8782888561111c565b935093505050935093915050565b828054611244906116a0565b90600052602060002090601f01602090048101928261126657600085556112ac565b82601f1061127f57805160ff19168380011785556112ac565b828001600101855582156112ac579182015b828111156112ac578251825591602001919060010190611291565b506112b89291506112bc565b5090565b5b808211156112b857600081556001016112bd565b80356001600160a01b03811681146112e857600080fd5b919050565b600082601f8301126112fe57600080fd5b813567ffffffffffffffff8082111561131957611319611707565b604051601f8301601f19908116603f0116810190828211818310171561134157611341611707565b8160405283815286602085880101111561135a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561138c57600080fd5b611395826112d1565b9392505050565b600080604083850312156113af57600080fd5b6113b8836112d1565b91506113c6602084016112d1565b90509250929050565b6000806000606084860312156113e457600080fd5b6113ed846112d1565b92506113fb602085016112d1565b9150604084013590509250925092565b60008060008060008060a0878903121561142457600080fd5b61142d876112d1565b955061143b602088016112d1565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561146657600080fd5b818901915089601f83011261147a57600080fd5b81358181111561148957600080fd5b8a602082850101111561149b57600080fd5b6020830194508093505050509295509295509295565b600080604083850312156114c457600080fd5b6114cd836112d1565b946020939093013593505050565b6000602082840312156114ed57600080fd5b8151801515811461139557600080fd5b6000806040838503121561151057600080fd5b823567ffffffffffffffff8082111561152857600080fd5b611534868387016112ed565b9350602085013591508082111561154a57600080fd5b50611557858286016112ed565b9150509250929050565b600080835481600182811c91508083168061157d57607f831692505b602080841082141561159d57634e487b7160e01b86526022600452602486fd5b8180156115b157600181146115c2576115ef565b60ff198616895284890196506115ef565b60008a81526020902060005b868110156115e75781548b8201529085019083016115ce565b505084890196505b509498975050505050505050565b600060208083528351808285015260005b8181101561162a5785810183015185820160400152820161160e565b8181111561163c576000604083870101525b50601f01601f1916929092016040019392505050565b602080825260059082015264042c2eae8d60db1b604082015260600190565b60008219821115611684576116846116db565b500190565b60008282101561169b5761169b6116db565b500390565b600181811c908216806116b457607f821691505b602082108114156116d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122057eda0d41ecf2895106e129a44b58f9eb2d05967d89c7611573b36f53386b3c564736f6c63430008070033";

type LootConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LootConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Loot__factory extends ContractFactory {
  constructor(...args: LootConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Loot> {
    return super.deploy(overrides || {}) as Promise<Loot>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Loot {
    return super.attach(address) as Loot;
  }
  override connect(signer: Signer): Loot__factory {
    return super.connect(signer) as Loot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootInterface {
    return new utils.Interface(_abi) as LootInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Loot {
    return new Contract(address, _abi, signerOrProvider) as Loot;
  }
}
