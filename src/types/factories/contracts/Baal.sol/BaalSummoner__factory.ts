/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BaalSummoner,
  BaalSummonerInterface,
} from "../../../contracts/Baal.sol/BaalSummoner";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_template",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gnosisSingleton",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gnosisFallbackLibrary",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gnosisMultisendLibrary",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gnosisSafeProxyFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_moduleProxyFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lootSingleton",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sharesSingleton",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "address_",
        type: "address",
      },
    ],
    name: "TakenAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "masterCopy",
        type: "address",
      },
    ],
    name: "ModuleProxyCreation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "baal",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "loot",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "shares",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "safe",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "existingSafe",
        type: "bool",
      },
    ],
    name: "SummonBaal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "masterCopy",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "deployModule",
    outputs: [
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "_calls",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "encodeMultisend",
    outputs: [
      {
        internalType: "bytes",
        name: "encodedMultisend",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "gnosisFallbackLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gnosisMultisendLibrary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gnosisSingleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lootSingleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sharesSingleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializationParams",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "initializationActions",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "_saltNonce",
        type: "uint256",
      },
    ],
    name: "summonBaal",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializationParams",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "initializationActions",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "_saltNonce",
        type: "uint256",
      },
    ],
    name: "summonBaalAndSafe",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620016f0380380620016f08339810160408190526200003591620000a2565b6001600160601b0319606098891b811660805296881b871660a05294871b861660c05292861b851660e052600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055831b82166101005290911b16610120526200017c565b600080600080600080600080610100898b031215620000c057600080fd5b8851620000cd8162000163565b60208a0151909850620000e08162000163565b60408a0151909750620000f38162000163565b60608a0151909650620001068162000163565b60808a0151909550620001198162000163565b60a08a01519094506200012c8162000163565b60c08a01519093506200013f8162000163565b60e08a0151909250620001528162000163565b809150509295985092959890939650565b6001600160a01b03811681146200017957600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c6101205160601c6114c762000229600039600081816101460152818161032701526106670152600081816101a001528181610306015261064601526000818161011f01528181610348015281816106880152610c1f0152600081816101c70152610c4301526000818160a80152610a8a01526000818160f80152818161026b015261059d01526114c76000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063ad9d9a1211610066578063ad9d9a1214610168578063d61f27ae1461017b578063d9118ce71461019b578063f0fa28b9146101c2578063f1ab873c146101e957600080fd5b806321d56a43146100a35780634a8b0b32146100e05780636f2ddd93146100f3578063881e4ea41461011a578063a234661814610141575b600080fd5b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6040516100d79190611206565b60405180910390f35b6100ca6100ee366004610f62565b6101fc565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6100ca610176366004610f62565b610533565b61018e610189366004610efd565b610873565b6040516100d79190611336565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6100ca6101f7366004610ea5565b61093a565b600080808061020d888a018a611091565b6040805160048082526024820183526020820180516001600160e01b0316632d77bef360e11b1790526001549251633c6ae1cf60e21b815295985093965091945090926000926001600160a01b039092169163f1ab873c91610295917f00000000000000000000000000000000000000000000000000000000000000009187918d910161121a565b602060405180830381600087803b1580156102af57600080fd5b505af11580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e79190610e81565b905060006102fe6102f88a8c6113e7565b83610873565b9050600086867f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000898760405160200161037f9796959493929190611349565b60408051601f198184030181529082905263a4f9edbf60e01b825291506001600160a01b0384169063a4f9edbf906103bb908490600401611336565b600060405180830381600087803b1580156103d557600080fd5b505af11580156103e9573d6000803e3d6000fd5b50505050826001600160a01b0316638009ba1f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610e81565b6001600160a01b0316836001600160a01b031663f460124d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a057600080fd5b505afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d89190610e81565b604080516001600160a01b03898116825260016020830152928316928716917f211ecb4ba40076c0ce1a21fd90fea438543486baf1b8741ec26cba8138aee0d9910160405180910390a450909b9a5050505050505050505050565b600080806105438789018961102e565b6040805160048082526024820183526020820180516001600160e01b0316632d77bef360e11b1790526001549251633c6ae1cf60e21b8152949650929450926000926001600160a01b039092169163f1ab873c916105c7917f00000000000000000000000000000000000000000000000000000000000000009187918c910161121a565b602060405180830381600087803b1580156105e157600080fd5b505af11580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106199190610e81565b905060006106278288610a46565b9050600061063e6106388a8c6113e7565b84610873565b9050600086867f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000087876040516020016106bf9796959493929190611349565b60408051601f198184030181529082905263a4f9edbf60e01b825291506001600160a01b0385169063a4f9edbf906106fb908490600401611336565b600060405180830381600087803b15801561071557600080fd5b505af1158015610729573d6000803e3d6000fd5b50505050836001600160a01b0316638009ba1f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561076657600080fd5b505afa15801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e9190610e81565b6001600160a01b0316846001600160a01b031663f460124d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e057600080fd5b505afa1580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108189190610e81565b604080516001600160a01b03878116825260006020830152928316928816917f211ecb4ba40076c0ce1a21fd90fea438543486baf1b8741ec26cba8138aee0d9910160405180910390a450919b9a5050505050505050505050565b60608060005b84518110156108f65781600085600088858151811061089a5761089a61144d565b6020026020010151518986815181106108b5576108b561144d565b60200260200101516040516020016108d296959493929190611150565b604051602081830303815290604052915080806108ee90611424565b915050610879565b50806040516024016109089190611336565b60408051601f198184030181529190526020810180516001600160e01b03166346c07f8560e11b179052949350505050565b600061097e84848051906020012084604051602001610963929190918252602082015260400190565b60405160208183030381529060405280519060200120610cb0565b90506000816001600160a01b03168460405161099a9190611134565b6000604051808303816000865af19150503d80600081146109d7576040519150601f19603f3d011682016040523d82523d6000602084013e6109dc565b606091505b50509050806109fe57604051637dabd39960e01b815260040160405180910390fd5b846001600160a01b0316826001600160a01b03167f2150ada912bf189ed721c44211199e270903fc88008c2a1e1e889ef30fe67c5f60405160405180910390a3509392505050565b6000805460408051602080820186905282518083039091018152818301928390526361b69abd60e01b90925283926001600160a01b0316916361b69abd91610ab2917f00000000000000000000000000000000000000000000000000000000000000009160440161124e565b602060405180830381600087803b158015610acc57600080fd5b505af1158015610ae0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b049190610e81565b9050600084604051602401610b199190611206565b60408051601f19818403018152918152602080830180516001600160e01b031663610b592560e01b17905282519151929350600092610b6192849287928492918891016111b5565b6040516020818303038152906040529050600081604051602401610b859190611336565b60408051601f19818403018152918152602080830180516001600160e01b03166346c07f8560e11b17905281516001808252818401909352929350600092919082810190803683370190505090508781600081518110610be757610be761144d565b6001600160a01b03928316602091820292909201015260405163b63e800d60e01b81529086169063b63e800d90610c729084906001907f00000000000000000000000000000000000000000000000000000000000000009088907f0000000000000000000000000000000000000000000000000000000000000000906000908190819060040161127a565b600060405180830381600087803b158015610c8c57600080fd5b505af1158015610ca0573d6000803e3d6000fd5b50969a9950505050505050505050565b60006001600160a01b038316610ce45782604051633202e20d60e21b8152600401610cdb9190611206565b60405180910390fd5b60405172602d8060093d393df3363d3d373d3d3d363d7360681b60208201526bffffffffffffffffffffffff19606085901b1660338201526e5af43d82803e903d91602b57fd5bf360881b60478201526000906056016040516020818303038152906040529050828151602083016000f591506001600160a01b038216610d80578160405163371e9e8960e21b8152600401610cdb9190611206565b5092915050565b60006001600160401b0380841115610da157610da1611463565b8360051b6020610db28183016113b7565b868152935080840185838101891015610dca57600080fd5b60009350835b88811015610e0557813586811115610de6578586fd5b610df28b828b01610e12565b8452509183019190830190600101610dd0565b5050505050509392505050565b600082601f830112610e2357600080fd5b81356001600160401b03811115610e3c57610e3c611463565b610e4f601f8201601f19166020016113b7565b818152846020838601011115610e6457600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610e9357600080fd5b8151610e9e81611479565b9392505050565b600080600060608486031215610eba57600080fd5b8335610ec581611479565b925060208401356001600160401b03811115610ee057600080fd5b610eec86828701610e12565b925050604084013590509250925092565b60008060408385031215610f1057600080fd5b82356001600160401b03811115610f2657600080fd5b8301601f81018513610f3757600080fd5b610f4685823560208401610d87565b9250506020830135610f5781611479565b809150509250929050565b600080600080600060608688031215610f7a57600080fd5b85356001600160401b0380821115610f9157600080fd5b818801915088601f830112610fa557600080fd5b813581811115610fb457600080fd5b896020828501011115610fc657600080fd5b602092830197509550908701359080821115610fe157600080fd5b818801915088601f830112610ff557600080fd5b81358181111561100457600080fd5b8960208260051b850101111561101957600080fd5b96999598505060200195604001359392505050565b6000806040838503121561104157600080fd5b82356001600160401b038082111561105857600080fd5b61106486838701610e12565b9350602085013591508082111561107a57600080fd5b5061108785828601610e12565b9150509250929050565b6000806000606084860312156110a657600080fd5b83356001600160401b03808211156110bd57600080fd5b6110c987838801610e12565b945060208601359150808211156110df57600080fd5b506110ec86828701610e12565b92505060408401356110fd81611479565b809150509250925092565b600081518084526111208160208601602086016113f4565b601f01601f19169290920160200192915050565b600082516111468184602087016113f4565b9190910192915050565b60008751611162818460208c016113f4565b808301905060ff60f81b8860f81b1681526001600160601b03198760601b16600182015285601582015284603582015283516111a58160558401602088016113f4565b0160550198975050505050505050565b60ff60f81b8660f81b1681526001600160601b03198560601b166001820152836015820152826035820152600082516111f58160558501602087016113f4565b919091016055019695505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b038416815260606020820181905260009061123e90830185611108565b9050826040830152949350505050565b6001600160a01b038316815260406020820181905260009061127290830184611108565b949350505050565b6101008082528951908201819052600090610120830190602090818d01845b828110156112be5781516001600160a01b031685529383019390830190600101611299565b50505083018a90526001600160a01b038916604084015282810360608401526112e78189611108565b9150506112ff60808301876001600160a01b03169052565b6001600160a01b03851660a08301528360c083015261132960e08301846001600160a01b03169052565b9998505050505050505050565b602081526000610e9e6020830184611108565b60e08152600061135c60e083018a611108565b828103602084015261136e818a611108565b6001600160a01b03898116604086015288811660608601528781166080860152861660a085015283810360c085015290506113a98185611108565b9a9950505050505050505050565b604051601f8201601f191681016001600160401b03811182821017156113df576113df611463565b604052919050565b6000610e9e368484610d87565b60005b8381101561140f5781810151838201526020016113f7565b8381111561141e576000848401525b50505050565b600060001982141561144657634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461148e57600080fd5b5056fea26469706673582212202c85e462b7cc04792967cdad2c3e0a44e659dc252848f81e22b0f737c744f9c364736f6c63430008070033";

type BaalSummonerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaalSummonerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaalSummoner__factory extends ContractFactory {
  constructor(...args: BaalSummonerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _template: PromiseOrValue<string>,
    _gnosisSingleton: PromiseOrValue<string>,
    _gnosisFallbackLibrary: PromiseOrValue<string>,
    _gnosisMultisendLibrary: PromiseOrValue<string>,
    _gnosisSafeProxyFactory: PromiseOrValue<string>,
    _moduleProxyFactory: PromiseOrValue<string>,
    _lootSingleton: PromiseOrValue<string>,
    _sharesSingleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaalSummoner> {
    return super.deploy(
      _template,
      _gnosisSingleton,
      _gnosisFallbackLibrary,
      _gnosisMultisendLibrary,
      _gnosisSafeProxyFactory,
      _moduleProxyFactory,
      _lootSingleton,
      _sharesSingleton,
      overrides || {}
    ) as Promise<BaalSummoner>;
  }
  override getDeployTransaction(
    _template: PromiseOrValue<string>,
    _gnosisSingleton: PromiseOrValue<string>,
    _gnosisFallbackLibrary: PromiseOrValue<string>,
    _gnosisMultisendLibrary: PromiseOrValue<string>,
    _gnosisSafeProxyFactory: PromiseOrValue<string>,
    _moduleProxyFactory: PromiseOrValue<string>,
    _lootSingleton: PromiseOrValue<string>,
    _sharesSingleton: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _template,
      _gnosisSingleton,
      _gnosisFallbackLibrary,
      _gnosisMultisendLibrary,
      _gnosisSafeProxyFactory,
      _moduleProxyFactory,
      _lootSingleton,
      _sharesSingleton,
      overrides || {}
    );
  }
  override attach(address: string): BaalSummoner {
    return super.attach(address) as BaalSummoner;
  }
  override connect(signer: Signer): BaalSummoner__factory {
    return super.connect(signer) as BaalSummoner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaalSummonerInterface {
    return new utils.Interface(_abi) as BaalSummonerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaalSummoner {
    return new Contract(address, _abi, signerOrProvider) as BaalSummoner;
  }
}
