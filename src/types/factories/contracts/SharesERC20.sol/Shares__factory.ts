/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Shares,
  SharesInterface,
} from "../../../contracts/SharesERC20.sol/Shares";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "baal",
    outputs: [
      {
        internalType: "contract IBaal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromTimeStamp",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nCheckpoints",
        type: "uint256",
      },
    ],
    name: "getCheckpoint",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromTimeStamp",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct Shares.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600881526754656d706c61746560c01b6020808301918252835180850190945260018452601560fa1b9084015281519192916200005b91600391620001af565b50805162000071906004906020840190620001af565b5050600554610100900460ff16159050808015620000965750600554600160ff909116105b80620000c65750620000b330620001a060201b62000c241760201c565b158015620000c6575060055460ff166001145b6200012e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6005805460ff19166001179055801562000152576005805461ff0019166101001790555b801562000199576005805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5062000292565b6001600160a01b03163b151590565b828054620001bd9062000255565b90600052602060002090601f016020900481019282620001e157600085556200022c565b82601f10620001fc57805160ff19168380011785556200022c565b828001600101855582156200022c579182015b828111156200022c5782518255916020019190600101906200020f565b506200023a9291506200023e565b5090565b5b808211156200023a57600081556001016200023f565b600181811c908216806200026a57607f821691505b602082108114156200028c57634e487b7160e01b600052602260045260246000fd5b50919050565b611f1f80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063587cde1e116100c35780639dc29fac1161007c5780639dc29fac1461034f5780639fd5a6cf14610362578063a457c2d714610375578063a9059cbb14610388578063dd62ed3e1461039b578063e5a2a2a5146103ae57600080fd5b8063587cde1e146102a05780635c19a95c146102e15780636fcfff45146102f457806370a08231146103145780637ecebe001461032757806395d89b411461034757600080fd5b8063313ce56711610115578063313ce5671461020f578063395093511461021e57806340c10f191461023157806347f761f5146102465780634a9e3e131461027a578063562d190d1461028d57600080fd5b806306fdde0314610152578063095ea7b3146101705780630cdfebfa1461019357806318160ddd146101ea57806323b872dd146101fc575b600080fd5b61015a6103c1565b6040516101679190611d64565b60405180910390f35b61018361017e366004611b71565b610453565b6040519015158152602001610167565b6101ce6101a1366004611b71565b60086020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff9093168352602083019190915201610167565b6002545b604051908152602001610167565b61018361020a366004611abd565b61046b565b60405160128152602001610167565b61018361022c366004611b71565b6104ae565b61024461023f366004611b71565b6104cb565b005b610259610254366004611b71565b61051f565b60408051825163ffffffff1681526020928301519281019290925201610167565b610244610288366004611b9b565b610571565b61024461029b366004611c25565b610762565b6102c96102ae366004611a68565b600a602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610167565b6102446102ef366004611a68565b6108ae565b6101ee610302366004611a68565b60096020526000908152604090205481565b6101ee610322366004611a68565b6108bb565b6101ee610335366004611a68565b600b6020526000908152604090205481565b61015a6108d6565b61024461035d366004611b71565b6108e5565b610244610370366004611af9565b610919565b610183610383366004611b71565b610b70565b610183610396366004611b71565b610beb565b6101ee6103a9366004611a8a565b610bf9565b600c546102c9906001600160a01b031681565b6060600680546103d090611e4c565b80601f01602080910402602001604051908101604052809291908181526020018280546103fc90611e4c565b80156104495780601f1061041e57610100808354040283529160200191610449565b820191906000526020600020905b81548152906001019060200180831161042c57829003601f168201915b5050505050905090565b600033610461818585610c33565b5060019392505050565b6000610478848484610d57565b60006104848533610bf9565b905060001981146104a3576104a3853361049e8685611e35565b610c33565b506001949350505050565b6000336104618185856104c18383610bf9565b61049e9190611e1d565b600c546001600160a01b031633146104fe5760405162461bcd60e51b81526004016104f590611dfe565b60405180910390fd5b6002546001600160ff1b039082011161051b5761051b8282610f1f565b5050565b604080518082018252600080825260209182018190526001600160a01b0394909416845260088152818420928452918252918290208251808401909352805463ffffffff168352600101549082015290565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86660066040516105a39190611c89565b6040519081900381206105bd929146903090602001611d40565b60408051808303601f1901815282825280516020918201207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf828501526001600160a01b038a16848401526060840189905260808085018990528351808603909101815260a085019093528251929091019190912090925090600090610649908490849060c001611d25565b60405160208183030381529060405280519060200120905060006106a586868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050610ff89050565b90506001600160a01b0381166106cd5760405162461bcd60e51b81526004016104f590611dda565b6001600160a01b0381166000908152600b6020526040902080546001810190915588146107255760405162461bcd60e51b8152602060048201526006602482015265216e6f6e636560d01b60448201526064016104f5565b86158061073157504287105b61074d5760405162461bcd60e51b81526004016104f590611db9565b610757818a61101c565b505050505050505050565b600554610100900460ff16158080156107825750600554600160ff909116105b806107a3575061079130610c24565b1580156107a3575060055460ff166001145b6108065760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104f5565b6005805460ff191660011790558015610829576005805461ff0019166101001790555b600c80546001600160a01b03191633179055825161084e9060069060208601906118e4565b5081516108629060079060208501906118e4565b5080156108a9576005805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6108b8338261101c565b50565b6001600160a01b031660009081526020819052604090205490565b6060600780546103d090611e4c565b600c546001600160a01b0316331461090f5760405162461bcd60e51b81526004016104f590611dfe565b61051b82826110ee565b60007f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866600660405161094b9190611c89565b604051908190038120610965929146903090602001611d40565b60408051808303601f1901815282825280516020918201206001600160a01b038b81166000818152600b85528581208054600181019091557f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c995880195909552948601528a1660608501526080840189905260a084019190915260c0830187905292509060e00160405160208183030381529060405280519060200120905060008282604051602001610a19929190611d25565b6040516020818303038152906040528051906020012090506000610a7586868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050610ff89050565b90506001600160a01b038116610a9d5760405162461bcd60e51b81526004016104f590611dda565b896001600160a01b0316816001600160a01b031614610aec5760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b60448201526064016104f5565b50505083421115610b0f5760405162461bcd60e51b81526004016104f590611db9565b610b1a878787610c33565b856001600160a01b0316876001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610b5f91815260200190565b60405180910390a350505050505050565b60003381610b7e8286610bf9565b905083811015610bde5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104f5565b6104a38286868403610c33565b600033610461818585610d57565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b03163b151590565b6001600160a01b038316610c955760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104f5565b6001600160a01b038216610cf65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104f5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dbb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104f5565b6001600160a01b038216610e1d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104f5565b610e28838383611236565b6001600160a01b03831660009081526020819052604090205481811015610ea05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104f5565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ed7908490611e1d565b92505081905550826001600160a01b0316846001600160a01b0316600080516020611eca83398151915284604051610f1191815260200190565b60405180910390a350505050565b6001600160a01b038216610f755760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104f5565b610f8160008383611236565b8060026000828254610f939190611e1d565b90915550506001600160a01b03821660009081526020819052604081208054839290610fc0908490611e1d565b90915550506040518181526001600160a01b03831690600090600080516020611eca8339815191529060200160405180910390a35050565b600080600061100785856113cd565b915091506110148161143d565b509392505050565b6000611027836108bb565b1161105e5760405162461bcd60e51b81526020600482015260076024820152662173686172657360c81b60448201526064016104f5565b6001600160a01b038083166000908152600a6020526040902080548383166001600160a01b03198216179091551661109f818361109a866108bb565b6115f3565b816001600160a01b0316816001600160a01b0316846001600160a01b03167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a4505050565b6001600160a01b03821661114e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104f5565b61115a82600083611236565b6001600160a01b038216600090815260208190526040902054818110156111ce5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104f5565b6001600160a01b03831660009081526020819052604081208383039055600280548492906111fd908490611e35565b90915550506040518281526000906001600160a01b03851690600080516020611eca8339815191529060200160405180910390a3505050565b6001600160a01b03831615806112685750600c546001600160a01b03163314801561126857506001600160a01b038216155b806112f85750600c60009054906101000a90046001600160a01b03166001600160a01b0316631c97cf3f6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112be57600080fd5b505af11580156112d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f69190611c03565b155b6113345760405162461bcd60e51b815260206004820152600d60248201526c217472616e7366657261626c6560981b60448201526064016104f5565b61133d826108bb565b15801561136057506001600160a01b038216600090815260096020526040902054155b801561136c5750600081115b1561139b576001600160a01b0382166000818152600a6020526040902080546001600160a01b03191690911790555b6001600160a01b038084166000908152600a60205260408082205485841683529120546108a9929182169116836115f3565b6000808251604114156114045760208301516040840151606085015160001a6113f8878285856116d5565b94509450505050611436565b82516040141561142e57602083015160408401516114238683836117b8565b935093505050611436565b506000905060025b9250929050565b600081600481111561145157611451611e9d565b141561145a5750565b600181600481111561146e5761146e611e9d565b14156114b75760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b60448201526064016104f5565b60028160048111156114cb576114cb611e9d565b14156115195760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104f5565b600381600481111561152d5761152d611e9d565b14156115865760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104f5565b600481600481111561159a5761159a611e9d565b14156108b85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104f5565b816001600160a01b0316836001600160a01b03161415801561161457508015155b156108a9576001600160a01b03831615611675576001600160a01b038316600090815260096020526040812054908161164e576000611660565b61165b856001840361051f565b602001515b9050828103611671868484846117f1565b5050505b6001600160a01b038216156108a9576001600160a01b03821660009081526009602052604081205490816116aa5760006116bc565b6116b7846001840361051f565b602001515b90508281016116cd858484846117f1565b505050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561170257506000905060036117af565b8460ff16601b1415801561171a57508460ff16601c14155b1561172b57506000905060046117af565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561177f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166117a8576000600192509250506117af565b9150600090505b94509492505050565b6000806001600160ff1b038316816117d560ff86901c601b611e1d565b90506117e3878288856116d5565b935093505050935093915050565b42831580159061181957508063ffffffff16611810866001870361051f565b5163ffffffff16145b15611835578161182c866001870361051f565b60200152611899565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a166000818152600884528681208b825284528681209551865463ffffffff1916951694909417855590516001948501558252600990529190912090850190555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b8280546118f090611e4c565b90600052602060002090601f0160209004810192826119125760008555611958565b82601f1061192b57805160ff1916838001178555611958565b82800160010185558215611958579182015b8281111561195857825182559160200191906001019061193d565b50611964929150611968565b5090565b5b808211156119645760008155600101611969565b80356001600160a01b038116811461199457600080fd5b919050565b60008083601f8401126119ab57600080fd5b50813567ffffffffffffffff8111156119c357600080fd5b60208301915083602082850101111561143657600080fd5b600082601f8301126119ec57600080fd5b813567ffffffffffffffff80821115611a0757611a07611eb3565b604051601f8301601f19908116603f01168101908282118183101715611a2f57611a2f611eb3565b81604052838152866020858801011115611a4857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a7a57600080fd5b611a838261197d565b9392505050565b60008060408385031215611a9d57600080fd5b611aa68361197d565b9150611ab46020840161197d565b90509250929050565b600080600060608486031215611ad257600080fd5b611adb8461197d565b9250611ae96020850161197d565b9150604084013590509250925092565b60008060008060008060a08789031215611b1257600080fd5b611b1b8761197d565b9550611b296020880161197d565b94506040870135935060608701359250608087013567ffffffffffffffff811115611b5357600080fd5b611b5f89828a01611999565b979a9699509497509295939492505050565b60008060408385031215611b8457600080fd5b611b8d8361197d565b946020939093013593505050565b600080600080600060808688031215611bb357600080fd5b611bbc8661197d565b94506020860135935060408601359250606086013567ffffffffffffffff811115611be657600080fd5b611bf288828901611999565b969995985093965092949392505050565b600060208284031215611c1557600080fd5b81518015158114611a8357600080fd5b60008060408385031215611c3857600080fd5b823567ffffffffffffffff80821115611c5057600080fd5b611c5c868387016119db565b93506020850135915080821115611c7257600080fd5b50611c7f858286016119db565b9150509250929050565b600080835481600182811c915080831680611ca557607f831692505b6020808410821415611cc557634e487b7160e01b86526022600452602486fd5b818015611cd95760018114611cea57611d17565b60ff19861689528489019650611d17565b60008a81526020902060005b86811015611d0f5781548b820152908501908301611cf6565b505084890196505b509498975050505050505050565b61190160f01b81526002810192909252602282015260420190565b938452602084019290925260408301526001600160a01b0316606082015260800190565b600060208083528351808285015260005b81811015611d9157858101830151858201604001528201611d75565b81811115611da3576000604083870101525b50601f01601f1916929092016040019392505050565b602080825260079082015266195e1c1a5c995960ca1b604082015260600190565b6020808252600a9082015269217369676e61746f727960b01b604082015260600190565b602080825260059082015264042c2eae8d60db1b604082015260600190565b60008219821115611e3057611e30611e87565b500190565b600082821015611e4757611e47611e87565b500390565b600181811c90821680611e6057607f821691505b60208210811415611e8157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122010cb0ad575186e9929fd9a947980f192012f0d4b87df077a290548656b24e8f664736f6c63430008070033";

type SharesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Shares__factory extends ContractFactory {
  constructor(...args: SharesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Shares> {
    return super.deploy(overrides || {}) as Promise<Shares>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Shares {
    return super.attach(address) as Shares;
  }
  override connect(signer: Signer): Shares__factory {
    return super.connect(signer) as Shares__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharesInterface {
    return new utils.Interface(_abi) as SharesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Shares {
    return new Contract(address, _abi, signerOrProvider) as Shares;
  }
}
