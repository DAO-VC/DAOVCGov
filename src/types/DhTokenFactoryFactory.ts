/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DhTokenFactory } from "./DhTokenFactory";

export class DhTokenFactoryFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_template: string, overrides?: Overrides): Promise<DhTokenFactory> {
    return super.deploy(_template, overrides || {}) as Promise<DhTokenFactory>;
  }
  getDeployTransaction(
    _template: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_template, overrides || {});
  }
  attach(address: string): DhTokenFactory {
    return super.attach(address) as DhTokenFactory;
  }
  connect(signer: Signer): DhTokenFactoryFactory {
    return super.connect(signer) as DhTokenFactoryFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DhTokenFactory {
    return new Contract(address, _abi, signerOrProvider) as DhTokenFactory;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_template",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "SummonToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "summonToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "template",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516104e73803806104e783398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c61045061009760003960008181606f0152609901526104506000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806307924a851461003b5780636f2ddd931461006a575b600080fd5b61004e6100493660046102fd565b610091565b6040516001600160a01b03909116815260200160405180910390f35b61004e7f000000000000000000000000000000000000000000000000000000000000000081565b6000806100bd7f000000000000000000000000000000000000000000000000000000000000000061021e565b60405163562d190d60e01b81529091506001600160a01b0382169063562d190d906100ee90889088906004016103d6565b600060405180830381600087803b15801561010857600080fd5b505af115801561011c573d6000803e3d6000fd5b50506040516340c10f1960e01b81526001600160a01b038681166004830152602482018a9052841692506340c10f199150604401600060405180830381600087803b15801561016a57600080fd5b505af115801561017e573d6000803e3d6000fd5b505060405163f2fde38b60e01b81526001600160a01b0386811660048301528416925063f2fde38b9150602401600060405180830381600087803b1580156101c557600080fd5b505af11580156101d9573d6000803e3d6000fd5b50506040516001600160a01b038087169350841691507fb060be8734a7e6bf45b0ae3f8785cc41b85caebb4084e39f75993fa132e8c67d90600090a395945050505050565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b600082601f83011261028157600080fd5b813567ffffffffffffffff8082111561029c5761029c610404565b604051601f8301601f19908116603f011681019082821181831017156102c4576102c4610404565b816040528381528660208588010111156102dd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561031357600080fd5b84359350602085013567ffffffffffffffff8082111561033257600080fd5b61033e88838901610270565b9450604087013591508082111561035457600080fd5b5061036187828801610270565b92505060608501356001600160a01b038116811461037e57600080fd5b939692955090935050565b6000815180845260005b818110156103af57602081850181015186830182015201610393565b818111156103c1576000602083870101525b50601f01601f19169290920160200192915050565b6040815260006103e96040830185610389565b82810360208401526103fb8185610389565b95945050505050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212207442700adc5638e256453672d263f52d27afd78c2c00c58776dfb472ac900a0864736f6c63430008070033";
