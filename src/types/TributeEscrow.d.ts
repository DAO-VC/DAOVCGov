/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TributeEscrowInterface extends ethers.utils.Interface {
  functions: {
    "encodeTributeProposal(address,uint256,uint256,address,uint32,address)": FunctionFragment;
    "releaseEscrow(address,uint32)": FunctionFragment;
    "submitTributeProposal(address,address,uint256,uint256,uint256,uint32,string)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "encodeTributeProposal",
    values: [string, BigNumberish, BigNumberish, string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "releaseEscrow",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "submitTributeProposal",
    values: [
      string,
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "encodeTributeProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "releaseEscrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "submitTributeProposal",
    data: BytesLike
  ): Result;

  events: {
    "TributeProposal(address,address,uint256,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "TributeProposal"): EventFragment;
}

export class TributeEscrow extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TributeEscrowInterface;

  functions: {
    encodeTributeProposal(
      baal: string,
      shares: BigNumberish,
      loot: BigNumberish,
      recipient: string,
      proposalId: BigNumberish,
      escrow: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "encodeTributeProposal(address,uint256,uint256,address,uint32,address)"(
      baal: string,
      shares: BigNumberish,
      loot: BigNumberish,
      recipient: string,
      proposalId: BigNumberish,
      escrow: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    releaseEscrow(
      _baal: string,
      _proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "releaseEscrow(address,uint32)"(
      _baal: string,
      _proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    submitTributeProposal(
      baal: string,
      token: string,
      amount: BigNumberish,
      shares: BigNumberish,
      loot: BigNumberish,
      expiration: BigNumberish,
      details: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "submitTributeProposal(address,address,uint256,uint256,uint256,uint32,string)"(
      baal: string,
      token: string,
      amount: BigNumberish,
      shares: BigNumberish,
      loot: BigNumberish,
      expiration: BigNumberish,
      details: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  encodeTributeProposal(
    baal: string,
    shares: BigNumberish,
    loot: BigNumberish,
    recipient: string,
    proposalId: BigNumberish,
    escrow: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "encodeTributeProposal(address,uint256,uint256,address,uint32,address)"(
    baal: string,
    shares: BigNumberish,
    loot: BigNumberish,
    recipient: string,
    proposalId: BigNumberish,
    escrow: string,
    overrides?: CallOverrides
  ): Promise<string>;

  releaseEscrow(
    _baal: string,
    _proposalId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "releaseEscrow(address,uint32)"(
    _baal: string,
    _proposalId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  submitTributeProposal(
    baal: string,
    token: string,
    amount: BigNumberish,
    shares: BigNumberish,
    loot: BigNumberish,
    expiration: BigNumberish,
    details: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "submitTributeProposal(address,address,uint256,uint256,uint256,uint32,string)"(
    baal: string,
    token: string,
    amount: BigNumberish,
    shares: BigNumberish,
    loot: BigNumberish,
    expiration: BigNumberish,
    details: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    encodeTributeProposal(
      baal: string,
      shares: BigNumberish,
      loot: BigNumberish,
      recipient: string,
      proposalId: BigNumberish,
      escrow: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "encodeTributeProposal(address,uint256,uint256,address,uint32,address)"(
      baal: string,
      shares: BigNumberish,
      loot: BigNumberish,
      recipient: string,
      proposalId: BigNumberish,
      escrow: string,
      overrides?: CallOverrides
    ): Promise<string>;

    releaseEscrow(
      _baal: string,
      _proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "releaseEscrow(address,uint32)"(
      _baal: string,
      _proposalId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    submitTributeProposal(
      baal: string,
      token: string,
      amount: BigNumberish,
      shares: BigNumberish,
      loot: BigNumberish,
      expiration: BigNumberish,
      details: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "submitTributeProposal(address,address,uint256,uint256,uint256,uint32,string)"(
      baal: string,
      token: string,
      amount: BigNumberish,
      shares: BigNumberish,
      loot: BigNumberish,
      expiration: BigNumberish,
      details: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    TributeProposal(
      baal: string | null,
      token: null,
      amount: null,
      recipient: null,
      proposalId: null
    ): EventFilter;
  };

  estimateGas: {
    encodeTributeProposal(
      baal: string,
      shares: BigNumberish,
      loot: BigNumberish,
      recipient: string,
      proposalId: BigNumberish,
      escrow: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "encodeTributeProposal(address,uint256,uint256,address,uint32,address)"(
      baal: string,
      shares: BigNumberish,
      loot: BigNumberish,
      recipient: string,
      proposalId: BigNumberish,
      escrow: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    releaseEscrow(
      _baal: string,
      _proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "releaseEscrow(address,uint32)"(
      _baal: string,
      _proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    submitTributeProposal(
      baal: string,
      token: string,
      amount: BigNumberish,
      shares: BigNumberish,
      loot: BigNumberish,
      expiration: BigNumberish,
      details: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "submitTributeProposal(address,address,uint256,uint256,uint256,uint32,string)"(
      baal: string,
      token: string,
      amount: BigNumberish,
      shares: BigNumberish,
      loot: BigNumberish,
      expiration: BigNumberish,
      details: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    encodeTributeProposal(
      baal: string,
      shares: BigNumberish,
      loot: BigNumberish,
      recipient: string,
      proposalId: BigNumberish,
      escrow: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "encodeTributeProposal(address,uint256,uint256,address,uint32,address)"(
      baal: string,
      shares: BigNumberish,
      loot: BigNumberish,
      recipient: string,
      proposalId: BigNumberish,
      escrow: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    releaseEscrow(
      _baal: string,
      _proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "releaseEscrow(address,uint32)"(
      _baal: string,
      _proposalId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    submitTributeProposal(
      baal: string,
      token: string,
      amount: BigNumberish,
      shares: BigNumberish,
      loot: BigNumberish,
      expiration: BigNumberish,
      details: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "submitTributeProposal(address,address,uint256,uint256,uint256,uint32,string)"(
      baal: string,
      token: string,
      amount: BigNumberish,
      shares: BigNumberish,
      loot: BigNumberish,
      expiration: BigNumberish,
      details: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
