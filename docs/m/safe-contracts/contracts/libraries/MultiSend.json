{
    "methods": {
        "multiSend(bytes)": {
            "stateMutability": "payable",
            "code": "function multiSend(bytes transactions) external payable",
            "inputs": {
                "transactions": {
                    "type": "bytes",
                    "description": "Encoded transactions. Each transaction is encoded as a packed bytes of                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),                     to as a address (=> 20 bytes),                     value as a uint256 (=> 32 bytes),                     data length as a uint256 (=> 32 bytes),                     data as bytes.                     see abi.encodePacked for more information on packed encoding"
                }
            },
            "outputs": {},
            "notice": "This method is payable as delegatecalls keep the msg.value from the previous call         If the calling method (e.g. execTransaction) received ETH this would revert otherwise",
            "details": "Sends multiple transactions and reverts all if one fails."
        }
    },
    "events": {},
    "errors": {},
    "path": "m/safe-contracts/contracts/libraries",
    "title": "Multi Send - Allows to batch multiple transactions into one.",
    "author": "Nick Dodson - <nick.dodson@consensys.net>Gonçalo Sá - <goncalo.sa@consensys.net>Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>",
    "name": "MultiSend"
}